%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Lorian Coltof
%%Title: Window .anim.frcanvas.frc.ca
%%CreationDate: Sat Mar 25 12:49:17 2017
%%BoundingBox: 201 258 412 535
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font DejavuSans
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font DejavuSans
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.75 0.75 scale
-163 -184 translate
24 369 moveto 303 369 lineto 303 0 lineto 24 0 lineto closepath clip newpath
gsave
158 87 moveto
158 81.664 158 77.335 158 74 curveto
158 70.665 158 67.668 158 65 curveto
158 62.332 158 59.335074020551 158 56.0002222839369 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
158 50 moveto
162.501 60.001 lineto
159.5 58.667518551433 lineto
156.5 58.667518551433 lineto
153.499 60.001 lineto
158 50 lineto
fill
grestore
gsave
87 168 moveto
95.004 159.996 101.997 153.669 108 149 curveto
114.003 144.331 119.1645 140.002 123.5 136 curveto
127.8355 131.998 131.419815841396 128.895698790025 134.263711235424 126.683780150226 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
139 123 moveto
133.86903517545 132.692894406174 lineto
133.079185932548 129.505369983183 lineto
131.237364092004 127.137313331054 lineto
128.342341772589 125.587145745352 lineto
139 123 lineto
fill
grestore
gsave
158 164 moveto
158 158.664 158 154.335 158 151 curveto
158 147.665 158 144.668 158 142 curveto
158 139.332 158 136.335074020551 158 133.000222283937 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
158 127 moveto
162.501 137.001 lineto
159.5 135.667518551433 lineto
156.5 135.667518551433 lineto
153.499 137.001 lineto
158 127 lineto
fill
grestore
gsave
233 167 moveto
223.662 159.663 216.003 153.669 210 149 curveto
203.997 144.331 198.669 140.002 194 136 curveto
189.331 131.998 185.580184158604 128.895698790025 182.736288764576 126.683780150226 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
178 123 moveto
188.657658227411 125.587145745352 lineto
185.762635907996 127.137313331054 lineto
183.920814067452 129.505369983183 lineto
183.13096482455 132.692894406174 lineto
178 123 lineto
fill
grestore
gsave
178 245 moveto
187.338 238.33 194.997 232.5025 201 227.5 curveto
207.003 222.4975 212.331 217.8355 217 213.5 curveto
221.669 209.1645 225.334501923092 206.110332051272 228.007513282558 204.328324478295 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
233 201 moveto
227.175370589537 210.292615037263 lineto
226.620238932439 207.055949682772 lineto
224.956138343764 204.559798799759 lineto
222.181959423117 202.802498287634 lineto
233 201 lineto
fill
grestore
gsave
158 241 moveto
158 235.664 158 231.335 158 228 curveto
158 224.665 158 221.668 158 219 curveto
158 216.332 158 213.335074020551 158 210.000222283937 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
158 204 moveto
162.501 214.001 lineto
159.5 212.667518551433 lineto
156.5 212.667518551433 lineto
153.499 214.001 lineto
158 204 lineto
fill
grestore
gsave
139 245 moveto
130.329 236.996 123.003 230.669 117 226 curveto
110.997 221.331 105.8355 217.002 101.5 213 curveto
97.1645 208.998 93.839703942166 205.984740949395 91.5156274539518 203.951174022208 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
87 200 moveto
97.4904487637797 203.198356880417 lineto
94.5107293745508 204.578735862844 lineto
92.5352155509452 206.836465946965 lineto
91.5625902837473 209.973052286169 lineto
87 200 lineto
fill
grestore
gsave
158 318 moveto
158 313.331 158 309.1685 158 305.5 curveto
158 301.8315 158 298.668 158 296 curveto
158 293.332 158 290.335074020551 158 287.000222283937 curveto
0 setlinecap
0 setlinejoin
3 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
158 281 moveto
162.501 291.001 lineto
159.5 289.667518551433 lineto
156.5 289.667518551433 lineto
153.499 291.001 lineto
158 281 lineto
fill
grestore
gsave
26 2 moveto
301 2 lineto
301 367 lineto
26 367 lineto
26 2 lineto
0 setlinecap
0 setlinejoin
1 setlinewidth
[] 0 setdash
0.498 0.498 0.498 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
158 262 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
158 262 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
158 264 [
[(WC1)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
158 30 translate 28 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
158 30 translate 28 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
158 32 [
[(Out)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
158 107 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
158 107 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
158 109 [
[(WC4)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
254 185 translate 38 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
254 185 translate 38 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
254 187 [
[(WC32)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
68 185 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
68 185 translate 33 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
68 187 [
[(WC2)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
158 185 translate 38 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
158 185 translate 38 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
158 187 [
[(WC31)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
gsave
matrix currentmatrix
158 339 translate 28 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.529 0.808 0.980 setrgbcolor AdjustColor
fill
matrix currentmatrix
158 339 translate 28 19 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.255 0.412 0.882 setrgbcolor AdjustColor
stroke
grestore
gsave
/DejavuSans findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.188 setrgbcolor AdjustColor
158 341 [
[(In)]
] 19 -0.5 0.5 0.5 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
