wc1 = new;
wc2a = new;
wc2b = new;
wc3 = new;
input = new;
output = new;
channel12 = new;
channel13 = new;

wc1.+v:str;
wc2a.+v:str;
wc2b.+v:str;
wc3.+v:str;
channel12.+v:str = "";
channel13.+v:str = "";

wc1.+a = channel12;
channel12.+a2 = wc2a;
channel12.+a1 = wc2b;

wc1.+b = channel13;
channel13.+b = wc3;

input.+q:str = "ABAB";
output.+q:str = "";

input.+ab = wc1;
wc2a.+a = output;
wc2b.+a = output;
wc3.+b = output;

fork #2;
##L1;
fork #2;
##L2;
fork #2;
##L22;
##L3;

L1;
+wc1.v==""{;
    first input.q wc1.v;
    delfirst input.q;
    ##L1;
}{;
    +wc1.v=="A"{;
        +channel12.v==""{;
            first wc1.v channel12.v;
            delfirst wc1.v;
        }{;
        };
        ##L1;
    }{;
    };

    +wc1.v=="B"{;
        +channel13.v==""{;
            first wc1.v channel13.v;
            delfirst wc1.v;
        }{;
        };
        ##L1;
    }{; };
    ##L1;
};

L2;
+wc2a.v==""{;
    +channel12.v==""; ##L2;
    -channel12.+lock; ##L2;
    +channel12.v==""{;
    }{;
        first channel12.v wc2a.v;
        delfirst channel12.v;
    };
    channel12.-lock;
    ##L2;
}{;
    append output.q wc2a.v;
    delfirst wc2a.v;
    ##L2;
};

L22;
+wc2b.v==""{;
    +channel12.v==""; ##L22;
    -channel12.+lock; ##L22;
    +channel12.v==""{;
    }{;
        first channel12.v wc2b.v;
        delfirst channel12.v;
    };
    channel12.-lock;
    ##L22;
}{;
    append output.q wc2b.v;
    delfirst wc2b.v;
    ##L22;
};

L3;
+wc3.v==""{;
    +channel13.v==""{;
    }{;
        first channel13.v wc3.v;
        delfirst channel13.v;
    };
    ##L3;
}{;
    append output.q wc3.v;
    delfirst wc3.v;
    ##L3;
};
